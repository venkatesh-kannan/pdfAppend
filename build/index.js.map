{"version":3,"sources":["../src/index.js"],"names":["PORT","process","env","app","router","express","Router","moment","require","path","HummusRecipe","fs","request","use","bodyParser","json","req","res","next","header","route","get","unlinkSync","join","__dirname","error","src","output","downloadPDF","outputFilename","uri","encoding","then","writeFileSync","dta","joiningDate","currentDate","diff","toFixed","console","log","format","pdfDoc","editPage","text","color","fontSize","font","endPage","endPDF","file","createReadStream","stat","statSync","setHeader","size","pipe","listen"],"mappings":"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","file":"index.js","sourcesContent":["import express from 'express';\nimport cors from 'cors';\nimport bodyParser from 'body-parser';\nconst PORT = process.env.PORT || 5000\nconst app = express();\nconst router = express.Router();\nconst moment = require('moment');\nconst path = require('path');\nconst HummusRecipe = require('hummus-recipe');\nvar fs = require('fs');\nconst request = require(\"request-promise-native\");\n\napp.use(cors());\napp.use(bodyParser.json());\napp.use(function (req, res, next) {\n    res.header(\"Access-Control-Allow-Origin\", \"*\");\n    res.header('Content-Type', 'application/pdf');\n    res.header('Access-Control-Expose-Headers','Content-Disposition');\n    next();\n});\n\nrouter.route('/getResume').get((req, res) => {\n    try {\n        fs.unlinkSync(path.join(__dirname, '/outputFile.pdf'));\n    } catch (error) {\n\n    }\n    let src;\n    const output = path.join(__dirname, '/outputFile.pdf');\n\n    function downloadPDF(outputFilename) {\n        src = path.join(__dirname, outputFilename);\n        try {\n            return request.get({ uri: 'https://firebasestorage.googleapis.com/v0/b/venkatesh-kannan.appspot.com/o/venkatesh-2.pdf?alt=media&token=52587cc2-b85c-4f27-a37b-bf48c5cc24e1', encoding: null }).then(dta => {\n                fs.writeFileSync(src, dta);\n                return true;\n            });\n        } catch (error) {\n            \n        }\n    }\n\n    downloadPDF('/resume.pdf').then(dta => {\n        let joiningDate = moment(\"2015-05-18\");\n        let currentDate = moment();\n        let diff = currentDate.diff(joiningDate, 'years', true).toFixed(1);\n        console.log(diff, ' years experience on ', moment().format('YYYY-MM-DD'));\n        const pdfDoc = new HummusRecipe(src, output);\n        pdfDoc\n            .editPage(1)\n            .text(diff, 408, 100, {\n                color: '#000000',\n                fontSize: 9,\n                font: 'Arial',\n            })\n            .endPage()\n            .endPDF();\n        var file = fs.createReadStream(output);\n        var stat = fs.statSync(output);\n        res.setHeader('Content-Length', stat.size);\n        res.setHeader('Content-Type', 'application/pdf');\n        res.setHeader('Content-Disposition', 'attachment; filename=resume.pdf');\n        file.pipe(res);\n    })\n});\n\napp.use('/', router);\n\napp.listen(PORT, () => console.log(`Listening on ${PORT}`))"]}